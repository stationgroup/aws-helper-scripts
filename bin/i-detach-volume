#!/bin/bash
# Unmount, and Detach an EBS Volume

source $(dirname $0)/../inc/ec2-include

if [ ! $1 ]; then
  echo "Usage: $(basename $0) MOUNT_POINT"
  echo
  echo "      MOUNT_POINT - The mount location of the volume that you wish to detach. (E.g. /ebs)"
  exit
fi

# Check if the specified mount point exists
if [ -d "$1" ]; then
  # Unify mount point to ensure it will match the 'df' output
  # For example ../mountpoint/ will become /mountpoint
  MOUNT_POINT=$(cd "$1"; pwd)

  # Find the device belonging to this mount point
  DEVICE=( $(df $MOUNT_POINT | grep " $MOUNT_POINT") )
  DEVICE=${DEVICE[0]}
else
  MOUNT_POINT=$1
fi

if [ $DEVICE ]; then
  echo "Device location for '$MOUNT_POINT' is '$DEVICE'"
  echo 

else
  echo "Warning: '$MOUNT_POINT' isn't currently mounted."
  echo "         Type 'df' to list currently mounted devices."
  echo
  UNMOUNTED="true"

  # Check /etc/fstab incase there's an entry for the device
  echo "Checking /etc/fstab for an associated device..."
  DEVICE=( $(cat /etc/fstab | grep " $MOUNT_POINT ") )
  DEVICE=${DEVICE[0]}

  if [ $DEVICE ]; then
    echo "Device location for '$MOUNT_POINT' is '$DEVICE'"
    echo
  else
    echo "Error: Couldn't locate an associated device for '$MOUNT_POINT'"
    echo
    exit 1
  fi
fi

# Find the Volume ID of the device
echo "Locating EBS Volume ID..."
VOLUME_ID=( $(i-describe-volumes | grep "ATTACHMENT" | grep /dev/sdk${DEVICE: -1} | grep "attached") )
VOLUME_ID=${VOLUME_ID[1]}

if [ ! $VOLUME_ID ]; then
  echo "Error: We couldn't associate '/dev/sdk${DEVICE: -1}' with an EBS Volume. Please ensure the device exists. "
  echo "       Type 'ec2-describe-volumes' to list attached EBS Volumes and their device locations."
else
  echo "Volume ID is '$VOLUME_ID'"
fi

if [ ! $UNMOUNTED ]; then
  # Unmount the EBS Volume
  echo
  echo "Unmounting device..."
  umount $DEVICE
  echo
fi

# Remove the EBS Volume from /etc/fstab
FSTAB_CONTENT=$(grep " $MOUNT_POINT " /etc/fstab);

if [ "$FSTAB_CONTENT" ]; then
  echo "Removing the following entries from fstab:"
  echo "$FSTAB_CONTENT"
  cp /etc/fstab /tmp/fstab.bak
  grep -v " $MOUNT_POINT " /tmp/fstab.bak > /etc/fstab
else
  echo "No mount entries found in /etc/fstab"
fi

echo

# Remove the crontab entry that performs EBS Snapshots for this Volume
CRONTAB_CONTENT=$(grep "i-snapshot-volume $MOUNT_POINT " /etc/cron.d/snapshot-ebs);

if [ "$CRONTAB_CONTENT" ]; then
  echo "Removing the following entries from the '/etc/cron.d/snapshot-ebs' crontab:"
  echo "$CRONTAB_CONTENT"
  cp /etc/cron.d/snapshot-ebs /tmp/ebs-snapshots.bak
  grep -v "i-snapshot-volume $MOUNT_POINT " /tmp/ebs-snapshots.bak > /etc/cron.d/snapshot-ebs
else
  echo "Cron entry wasn't found in /etc/cron.d/snapshot-ebs"
fi

echo

# Detach the EBS Volume
if [ "$VOLUME_ID" ]; then
  echo "Detaching EBS Volume..."
  # Wait for EBS volume to detach before doing anything else
  ec2-detach-volume $VOLUME_ID --instance $INSTANCE_ID
  while [ ! -z "$(i-describe-volumes | grep "ATTACHMENT" | grep /dev/sdf${DEVICE: -1})" ]; do sleep 1; done
  echo
fi

echo -e "\E[31mPlease note the directory '$MOUNT_POINT' still exists but can be manually removed if unneeded.\033[0m"
