#!/bin/bash

# Pragmas
set -u
set -e

function printHelpAndExit
{
  exitCode=$1
  printf "%s: version %s\n" "$weAreKnownAs" "$version"
  printf "Part of s3-bash. Latest version is at %s\n" 'http://code.google.com/p/s3-bash/'
  printf "Usage %s: -h\n" "$weAreKnownAs"
  printf "Usage %s: [-vS] [-H file] [-a file] -k key -s file url\n" "$weAreKnownAs"
  printf " Option\tType\tRequirement\tDescription\n"
  printf " -h\t\tprecedent\tprint this help\n"
  printf " -v\t\toptional\tverbose output\n"
  printf " -k\tstring\tmandatory\tAWS Access Key Id (Will also look in /root/.ec2/access-key-id)\n"
  printf " -s\tfile\tmandatory\tAWS Secret Access Key Id File (Will also look in /root/.ec2/secret-access-key)\n"
  printf " -S\t\toptional\tUse https\n"
  printf " -H\tfile\toptional\tFile to write response headers to\n"
  printf " -a\tfile\toptional\tFile to read Amazon custom headers from (X-Amz-Date is not allowed)\n"
  printf " \turl\tmandatory\trelative url including bucket name and leading slash, eg /bucket/path/to/object?acl. Assumed to be already encoded\n"
  printf "\n"
  printf "Notes\n"
  printf "Specify proxies using a ~/.curlrc file\n"
  exit $exitCode
}

function parseOptions
{
  verbose=""
  url=""
  awsAccessKeyId=""
  awsAccessSecretKeyIdFile=""
  protocol="http"
  dumpHeaderFile="/dev/null"
  amazonHeaderFile="/dev/null"
  while getopts "hvk:s:SH:T:a:" optionName; do    
    case "$optionName" in
      h)  printHelpAndExit 0;;
      v)  verbose="-v";;
      k)  awsAccessKeyId="$OPTARG";;
      s)  awsAccessSecretKeyIdFile="$OPTARG"
        if [ ! -e "$awsAccessSecretKeyIdFile" ]; then
          printErrorHelpAndExit "AWS Secret Key Id file does not exist" $userSpecifiedDataErrorExitCode
        fi;;
      S)  protocol="https";;
      H)  dumpHeaderFile="$OPTARG";;
      a)  amazonHeaderFile="$OPTARG";;
      [?])  printErrorHelpAndExit "Option not recognised" $userSpecifiedDataErrorExitCode;;
    esac
  done
  if [ 1 -eq $OPTIND ]; then
    printErrorHelpAndExit "Internal Error: parseOptions or a parent method in the call stack was not called with $"@"." $internalErrorExitCode
  fi
  let "toShift = $OPTIND - 1"
  shift $toShift
  if [ $# -eq 0 ]; then
    printErrorHelpAndExit "URL not specified" $userSpecifiedDataErrorExitCode
  fi
  url="$1"
  verifyUrl
    
  if [ -z "$awsAccessSecretKeyIdFile" ] && [ ! -f "/root/.ec2/secret-access-key" ]; then
    printErrorHelpAndExit "AWS Secret Access Key file not specified" $userSpecifiedDataErrorExitCode
  elif [ -z "$awsAccessKeyId" ] && [ ! -f "/root/.ec2/access-key-id" ]; then
    printErrorHelpAndExit "AWS Access Key Id not specified" $userSpecifiedDataErrorExitCode
  fi
}

function prepareToRunCurl
{
  readonly verb="DELETE"
  readonly verbToPass="-X DELETE"
  readonly contentMD5=""
  readonly contentType=""
}

readonly weAreKnownAs="$(basename $0)"

readonly commonFunctions="$(dirname $0)/../inc/s3-include"
if [ -e "$commonFunctions" ]; then
  source "$commonFunctions"
else
  version="Unknown"
  invalidEnvironmentExitCode=4
  printHelpAndExit "$weAreKnownAs: Could not locate file s3-common-functions" $invalidEnvironmentExitCode
fi

main "$@"
